/// This table contains date related fields that connect to the business activity you are trying to analyse.
table 'Dim Date'
	lineageTag: 42d34db5-74db-42af-80e5-24e79e9b4a21
	dataCategory: Time

	/// This column contains the date related to a business activity in the DD/MM/YYYY format.
	column Date
		dataType: dateTime
		isKey
		formatString: Short Date
		displayFolder: 01. Columns
		lineageTag: 9222327b-e92e-4f3c-b288-cecc3f7b1cd3
		isDefaultLabel
		summarizeBy: none
		sourceColumn: Date

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

		annotation BestPracticeAnalyzer_IgnoreRules = {"RuleIDs":["DATECOLUMN_FORMATSTRING"]}

	/// This columns tells you what year the business acitivity occured in. For example: 2024, 2025, etc.
	column Year
		dataType: int64
		formatString: 0
		displayFolder: 01. Columns
		lineageTag: 7bbbc350-ebaf-45c3-90d9-9394e6d73749
		summarizeBy: none
		sourceColumn: Year

		annotation SummarizationSetBy = Automatic

	/// This column contains the start date of the year related to the business acitivity.
	column 'Start of year'
		dataType: dateTime
		formatString: Short Date
		displayFolder: 04. Start off
		lineageTag: 9e4c4f4c-19ea-4539-89bb-536284bfac7f
		summarizeBy: none
		sourceColumn: Start of year

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	/// This column contains the end date of the year related to the business acitivity.
	column 'End of year'
		dataType: dateTime
		formatString: Short Date
		displayFolder: 05. End off
		lineageTag: 273390c0-448f-49b7-807e-bd1fd5830ad8
		summarizeBy: none
		sourceColumn: End of year

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	/// This column says what month of the year the business activity occured in.
	column 'Month of year'
		dataType: int64
		isHidden
		formatString: 0
		displayFolder: 07. Other
		lineageTag: 018a976a-77aa-4cd9-a476-09a7ab18482e
		summarizeBy: none
		sourceColumn: Month of year

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	/// This column contains the start date of the month related to the business acitivity.
	column 'Start of month'
		dataType: dateTime
		formatString: Short Date
		displayFolder: 04. Start off
		lineageTag: 9daa9357-0948-4f1f-9f6f-156f34d688c8
		summarizeBy: none
		sourceColumn: Start of month

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

		annotation BestPracticeAnalyzer_IgnoreRules = {"RuleIDs":[]}

	/// This column contains the end date of the month related to the business acitivity.
	column 'End of month'
		dataType: dateTime
		formatString: Short Date
		displayFolder: 05. End off
		lineageTag: 6a9f5fc2-79f7-43c9-9e26-40574478eedc
		summarizeBy: none
		sourceColumn: End of month

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

		annotation BestPracticeAnalyzer_IgnoreRules = {"RuleIDs":["MONTHCOLUMN_FORMATSTRING"]}

	/// This column gives you the amount of days the month has that the business acitivity occured in. For example if this activity happend in May then the number you get is 31.
	column 'Days in month'
		dataType: int64
		formatString: 0
		displayFolder: 01. Columns
		lineageTag: d24e5a65-9731-46c3-8ca6-6b770ac1a2ea
		summarizeBy: none
		sourceColumn: Days in month

		annotation SummarizationSetBy = Automatic

	/// This column gives you the name of the month that the business activity happend in. Example data: January, February, March, etc.
	column 'Month name'
		dataType: string
		displayFolder: 01. Columns
		lineageTag: 5cf55d78-4789-4420-ab8b-8dd66a264540
		summarizeBy: none
		sourceColumn: Month name
		sortByColumn: 'Month of year'

		changedProperty = SortByColumn

		annotation SummarizationSetBy = Automatic

	/// This column says what quarter of the year the business activity occured in.
	column 'Quarter of year'
		dataType: int64
		isHidden
		formatString: 0
		displayFolder: 07. Other
		lineageTag: 8bb7f605-1887-4c56-8798-21f53b485bcf
		summarizeBy: none
		sourceColumn: Quarter of year

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	/// This column contains the start date of the quarter related to the business acitivity.
	column 'Start of quarter'
		dataType: dateTime
		formatString: Short Date
		displayFolder: 04. Start off
		lineageTag: 7ca247d0-fafc-460c-9986-7797ec33bfe1
		summarizeBy: none
		sourceColumn: Start of quarter

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	/// This column contains the end date of the quarter related to the business acitivity.
	column 'End of quarter'
		dataType: dateTime
		formatString: Short Date
		displayFolder: 05. End off
		lineageTag: 55e32869-566c-437e-bde4-54df7dc3f6e6
		summarizeBy: none
		sourceColumn: End of quarter

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	/// This column says what week of the year the business activity occured in.
	column 'Week of year'
		dataType: int64
		isHidden
		formatString: 0
		displayFolder: 07. Other
		lineageTag: d6dead14-8c45-4fe0-8dae-da9c3bdcbae1
		summarizeBy: none
		sourceColumn: Week of year

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	/// This column gives you the week of the current month that is related to the business activity.
	column 'Week of month'
		dataType: int64
		formatString: 0
		displayFolder: 03. Day-week off
		lineageTag: dd1b5630-b737-4f17-a6b6-05f4cb165b01
		summarizeBy: none
		sourceColumn: Week of month

		annotation SummarizationSetBy = Automatic

	/// This column contains the start date of the week related to the business acitivity.
	column 'Start of week'
		dataType: dateTime
		formatString: Short Date
		displayFolder: 04. Start off
		lineageTag: efc27a33-dc86-4d99-9cce-1523ae314e23
		summarizeBy: none
		sourceColumn: Start of week

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	/// This column contains the end date of the week related to the business acitivity.
	column 'End of week'
		dataType: dateTime
		formatString: Short Date
		displayFolder: 05. End off
		lineageTag: fdfb0364-a956-41e7-97dc-9d6c26a7bded
		summarizeBy: none
		sourceColumn: End of week

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	/// This column gives you the day of the current month that is related to the business activity.
	column 'Day of month'
		dataType: int64
		formatString: 0
		displayFolder: 03. Day-week off
		lineageTag: f871c98c-b3cc-498d-959c-10c8dc1cb987
		summarizeBy: none
		sourceColumn: Day of month

		annotation SummarizationSetBy = Automatic

	/// This column gives you the day of the current year that is related to the business activity.
	column 'Day of year'
		dataType: int64
		formatString: 0
		displayFolder: 03. Day-week off
		lineageTag: 65a29958-f8c7-4397-9b03-abd69c38c952
		summarizeBy: none
		sourceColumn: Day of year

		annotation SummarizationSetBy = Automatic

	/// This column gives you the day of the current week that is related to the business activity.
	column 'Day of week'
		dataType: int64
		displayFolder: 03. Day-week off
		lineageTag: 6003044a-1b40-4aef-9a4b-6610c4aeefce
		summarizeBy: none
		sourceColumn: Day of week

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// This column contains the name of the day a business event happend. Examples are: "Monday", "Tuesday", etc.
	column 'Day name'
		dataType: string
		displayFolder: 01. Columns
		lineageTag: b3655f5f-f9e9-4bfe-8257-6bb985ba5e00
		summarizeBy: none
		sourceColumn: Day name
		sortByColumn: 'Day of week'

		changedProperty = SortByColumn

		annotation SummarizationSetBy = Automatic

	/// This column gives you the day of the current quarter that is related to the business activity.
	column 'Day of quarter'
		dataType: int64
		formatString: 0
		displayFolder: 03. Day-week off
		lineageTag: 64967f1a-d0d1-4ef3-ab99-2807d4cc84d0
		summarizeBy: none
		sourceColumn: Day of quarter

		annotation SummarizationSetBy = Automatic

	/// This column is specifically made to be used as a sort-by column. Notify the builder of the report if you can see this column as it should be hidden from end-users.
	column 'Year quarter sorting'
		dataType: int64
		isHidden
		formatString: 0
		displayFolder: 06. Sorting columns
		lineageTag: 072db130-431a-4a89-9e5e-11bf4dc08b16
		summarizeBy: none
		sourceColumn: Year quarter sorting

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	/// This column contains the offset by day from today.
	column 'Day offset'
		dataType: int64
		formatString: 0
		displayFolder: 02. Offsets to today
		lineageTag: a59f0119-d29d-4df8-bc50-45350c3883cf
		summarizeBy: none
		sourceColumn: Day offset

		annotation SummarizationSetBy = Automatic

	/// This column contains the name of the day a business event happend. Examples are: "Mon", "Tue", etc.
	column 'Day name short'
		dataType: string
		displayFolder: 01. Columns
		lineageTag: a42365d8-80c3-444d-a22f-4bb032d858ae
		summarizeBy: none
		sourceColumn: Day name short
		sortByColumn: 'Day of week'

		changedProperty = SortByColumn

		annotation SummarizationSetBy = Automatic

	/// This column is specifically made to be used as a sort-by column. Notify the builder of the report if you can see this column as it should be hidden from end-users.
	column 'Year month sorting'
		dataType: int64
		isHidden
		formatString: 0
		displayFolder: 06. Sorting columns
		lineageTag: c7bfc9f4-6f8e-47ab-bfff-7cdade260fbd
		summarizeBy: none
		sourceColumn: Year month sorting

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	/// This column is specifically made to be used as a sort-by column. Notify the builder of the report if you can see this column as it should be hidden from end-users.
	column 'Year week sorting'
		dataType: int64
		isHidden
		formatString: 0
		displayFolder: 06. Sorting columns
		lineageTag: 6969ead0-3301-4660-8f63-951d505df3aa
		summarizeBy: none
		sourceColumn: Year week sorting

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	/// This column gives you the name of the week that the related business acitivty occurred in. Example data: W1, W2, ..., W53.
	column 'Week name'
		dataType: string
		displayFolder: 01. Columns
		lineageTag: bd881ef2-13fa-465d-af0e-218eeccbf412
		summarizeBy: none
		sourceColumn: Week name
		sortByColumn: 'Week of year'

		changedProperty = SortByColumn

		annotation SummarizationSetBy = Automatic

	/// This column gives you the week and year that the business acitivity occurred in. Example data: W1 1991, W50 1991, W53 2025.
	column 'Week and year'
		dataType: string
		displayFolder: 01. Columns
		lineageTag: 380c4020-4aac-4000-919c-d7b0746a8a7a
		summarizeBy: none
		sourceColumn: Week and year
		sortByColumn: 'Year week sorting'

		changedProperty = SortByColumn

		annotation SummarizationSetBy = Automatic

	/// This column gives you the short name of the month that the business activity happend in. Example data: Jan, Feb, Mar, etc.
	column 'Month name short'
		dataType: string
		displayFolder: 01. Columns
		lineageTag: ce379a2a-47ed-458d-bbf6-189b2e6f635f
		summarizeBy: none
		sourceColumn: Month name short
		sortByColumn: 'Month of year'

		changedProperty = SortByColumn

		annotation SummarizationSetBy = Automatic

	/// This column gives you the month and year that the business acitivity occurred in. Example data: Jan 2025, Feb 2025, Oct 2030, etc.
	column 'Month and year'
		dataType: string
		displayFolder: 01. Columns
		lineageTag: 4b7cc521-0ead-4d50-8735-e3089cbd0dbb
		summarizeBy: none
		sourceColumn: Month and year
		sortByColumn: 'Year month sorting'

		changedProperty = SortByColumn

		annotation SummarizationSetBy = Automatic

	/// This column gives you the name of the quarter that a business activity happend in. Example data: Quarter 1, Quarter 2, etc.
	column 'Quarter name'
		dataType: string
		displayFolder: 01. Columns
		lineageTag: 70be5f53-30e4-4f3b-8f29-9da721c4dd57
		summarizeBy: none
		sourceColumn: Quarter name
		sortByColumn: 'Quarter of year'

		changedProperty = SortByColumn

		annotation SummarizationSetBy = Automatic

	/// This column gives you the short name of the quarter that a business activity happend in. Example data: Q1, Q2, Q3 and Q4.
	column 'Quarter name short'
		dataType: string
		displayFolder: 01. Columns
		lineageTag: bc148600-736c-487f-81e1-acffd492c8fc
		summarizeBy: none
		sourceColumn: Quarter name short
		sortByColumn: 'Quarter of year'

		changedProperty = SortByColumn

		annotation SummarizationSetBy = Automatic

	/// This column gives you the quarter and year that the business acitivity occurred in. Example data: Q1 2025, Q2, 2025, etc.
	column 'Quarter and year'
		dataType: string
		displayFolder: 01. Columns
		lineageTag: 8c0b7507-9384-4812-a1c0-4ba6b66555c2
		summarizeBy: none
		sourceColumn: Quarter and year
		sortByColumn: 'Year quarter sorting'

		changedProperty = SortByColumn

		annotation SummarizationSetBy = Automatic

	/// This column contains the offset by year from today. So if the current year would be 2025 then 2024 would be -1 and 2026 would be 1.
	column 'Year offset'
		dataType: int64
		formatString: 0
		displayFolder: 02. Offsets to today
		lineageTag: 5c7f4142-397f-49ab-a485-5094b4d1841c
		summarizeBy: none
		sourceColumn: Year offset

		annotation SummarizationSetBy = Automatic

	/// This column contains the offset by quarter from today.
	column 'Quarter offset'
		dataType: int64
		formatString: 0
		displayFolder: 02. Offsets to today
		lineageTag: 33465bc0-1129-4abd-88d6-b5470660cf3f
		summarizeBy: none
		sourceColumn: Quarter offset

		annotation SummarizationSetBy = Automatic

	/// This column contains the offset by month from today.
	column 'Month offset'
		dataType: int64
		formatString: 0
		displayFolder: 02. Offsets to today
		lineageTag: 01b668c6-a638-4d2b-be6c-761e3f2bcec7
		summarizeBy: none
		sourceColumn: Month offset

		annotation SummarizationSetBy = Automatic

	/// This column contains the offset by week from today. So if the current week would be 2025 week 15  then 2025 week 14 would be -1 and 2025 week 16 would be 1.
	column 'Week offset'
		dataType: int64
		formatString: 0
		displayFolder: 02. Offsets to today
		lineageTag: 3fa062ab-9755-47fe-9d33-2712224a2d84
		summarizeBy: none
		sourceColumn: Week offset

		annotation SummarizationSetBy = Automatic

	/// This column tells you if the business acitivity is in the present, past or future.
	column 'Date period'
		dataType: string
		displayFolder: 01. Columns
		lineageTag: b46419d8-fad1-4bb2-9485-91c119374932
		summarizeBy: none
		sourceColumn: Date period

		annotation SummarizationSetBy = Automatic

	/// This column says if the business activity happend in a weekday.
	column 'Is a weekday'
		dataType: string
		displayFolder: 01. Columns
		lineageTag: 494b4ee5-3ba7-4932-8f81-4255001c48ec
		summarizeBy: none
		sourceColumn: Is a weekday

		annotation SummarizationSetBy = Automatic

	/// This column says if the business activity happend in the weekend.
	column 'Is a weekend'
		dataType: string
		displayFolder: 01. Columns
		lineageTag: c4db4517-c535-4070-93e0-6e0d483288aa
		summarizeBy: none
		sourceColumn: Is a weekend

		annotation SummarizationSetBy = Automatic

	column 'Date SK'
		dataType: int64
		formatString: 0
		lineageTag: 67552b92-7ed7-4568-ba26-b1ca7109739a
		summarizeBy: none
		sourceColumn: Date SK

		annotation SummarizationSetBy = Automatic

	/// This hierarchy contains the year -> quarter -> month -> week -> date of the business activity.
	hierarchy '00. Hierarchy'
		lineageTag: b942ac6b-3e0b-4e2e-92f0-304604638693

		level Year
			lineageTag: c619d51b-cae3-4e1e-911b-c5136c844c83
			column: Year

		level 'Quarter name short'
			lineageTag: aa917bce-59e6-4d73-b2c9-fb8594015893
			column: 'Quarter name short'

		level 'Month name short'
			lineageTag: 7a0b4103-d992-43c1-9f3b-a7aa1690b192
			column: 'Month name short'

		level 'Week name'
			lineageTag: d51f2162-897f-411e-bd02-6cb68efb785c
			column: 'Week name'

		level Date
			lineageTag: 65fe22fd-e195-49bd-ae79-db3977e0d3d3
			column: Date

	partition 'Dim Date' = m
		mode: import
		source =
				let
				    Source = "",
				    Today = Date.From(DateTime.LocalNow()),
				    FromYear = 1900,
				    ToYear = 2100,
				    FromDate = #date(FromYear,1,1),
				    ToDate = #date(ToYear,12,31),
				    ListOfDates = List.Dates(
				        FromDate,
				        Duration.Days(ToDate-FromDate)+1,
				        #duration(1,0,0,0)
				    ),
				    #"Converted to Date Table" = Table.FromList(ListOfDates, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
				    #"Changed Type" = Table.TransformColumnTypes(#"Converted to Date Table",{{"Column1", type date}}),
				    #"Renamed Columns" = Table.RenameColumns(#"Changed Type",{{"Column1", "Date"}}),
				    #"Inserted Age" = Table.AddColumn(#"Renamed Columns", "Day offset", each [Date] - Date.From(DateTime.LocalNow()), type duration),
				    #"Inserted Year" = Table.AddColumn(#"Inserted Age", "Year", each Date.Year([Date]), Int64.Type),
				    #"Inserted Start of Year" = Table.AddColumn(#"Inserted Year", "Start of Year", each Date.StartOfYear([Date]), type date),
				    #"Inserted End of Year" = Table.AddColumn(#"Inserted Start of Year", "End of Year", each Date.EndOfYear([Date]), type date),
				    #"Inserted Month" = Table.AddColumn(#"Inserted End of Year", "Month", each Date.Month([Date]), Int64.Type),
				    #"Inserted Start of Month" = Table.AddColumn(#"Inserted Month", "Start of Month", each Date.StartOfMonth([Date]), type date),
				    #"Inserted End of Month" = Table.AddColumn(#"Inserted Start of Month", "End of Month", each Date.EndOfMonth([Date]), type date),
				    #"Inserted Days in Month" = Table.AddColumn(#"Inserted End of Month", "Days in Month", each Date.DaysInMonth([Date]), Int64.Type),
				    #"Inserted Month Name" = Table.AddColumn(#"Inserted Days in Month", "Month Name", each Date.MonthName([Date]), type text),
				    #"Inserted Quarter" = Table.AddColumn(#"Inserted Month Name", "Quarter", each Date.QuarterOfYear([Date]), Int64.Type),
				    #"Inserted Start of Quarter" = Table.AddColumn(#"Inserted Quarter", "Start of Quarter", each Date.StartOfQuarter([Date]), type date),
				    #"Inserted End of Quarter" = Table.AddColumn(#"Inserted Start of Quarter", "End of Quarter", each Date.EndOfQuarter([Date]), type date),
				    #"Inserted Week of Year" = Table.AddColumn(#"Inserted End of Quarter", "Week of Year", each Date.WeekOfYear([Date]), Int64.Type),
				    #"Inserted Week of Month" = Table.AddColumn(#"Inserted Week of Year", "Week of Month", each Date.WeekOfMonth([Date]), Int64.Type),
				    #"Inserted Start of Week" = Table.AddColumn(#"Inserted Week of Month", "Start of Week", each Date.StartOfWeek([Date]), type date),
				    #"Inserted End of Week" = Table.AddColumn(#"Inserted Start of Week", "End of Week", each Date.EndOfWeek([Date]), type date),
				    #"Inserted Day" = Table.AddColumn(#"Inserted End of Week", "Day of month", each Date.Day([Date]), Int64.Type),
				    #"Inserted Day of Week" = Table.AddColumn(#"Inserted Day", "Day of Week", each Date.DayOfWeek([Date]), Int64.Type),
				    #"Inserted Day of Year" = Table.AddColumn(#"Inserted Day of Week", "Day of Year", each Date.DayOfYear([Date]), Int64.Type),
				    #"Added - Day of week" = Table.AddColumn(#"Inserted Day of Year", "Day of week", each [Day of Week] + 1, type number),
				    #"Added - Day name" = Table.AddColumn(#"Added - Day of week", "Day name", each if [Day of week] = 1 then "Monday" else if [Day of week] = 2 then "Tuesday" else if [Day of week] = 3 then "Wednesday" else if [Day of week] = 4 then "Thursday" else if [Day of week] = 5 then "Friday" else if [Day of week] = 6 then "Saturday" else if [Day of week] = 7 then "Sunday" else null),
				    #"Added - Day name short" = Table.AddColumn(#"Added - Day name", "Day name short", each if [Day of week] = 1 then "Mon" else if [Day of week] = 2 then "Tue" else if [Day of week] = 3 then "Wed" else if [Day of week] = 4 then "Thu" else if [Day of week] = 5 then "Fri" else if [Day of week] = 6 then "Sat" else if [Day of week] = 7 then "Sun" else null),
				    #"Added - Day of quarter" = Table.AddColumn(#"Added - Day name short", "Day of quarter", each Int16.From([Date] - [Start of Quarter]) + 1),
				    #"Added - Year quarter sorting" = Table.AddColumn(#"Added - Day of quarter", "Year quarter sorting", each Text.Combine({Text.From([Year]), Text.From([Quarter])})),
				    #"Added - Year month sorting" = Table.AddColumn(#"Added - Year quarter sorting", "year month sorting", each [Year]*100 + [Month]),
				    #"Added - Year week sorting" = Table.AddColumn(#"Added - Year month sorting", "Year week sorting", each [Year] * 100 + [Week of Year]),
				    #"Added - Week name" = Table.AddColumn(#"Added - Year week sorting", "Week name", each Text.Combine({"W", Text.From(00 + [Week of Year])})),
				    #"Added - Week and year" = Table.AddColumn(#"Added - Week name", "Week and year", each Text.Combine({[Week name], " ", Text.From([Year])})),
				    #"Added - Month name short" = Table.AddColumn(#"Added - Week and year", "Month name short", each if [Month] = 1 then "Jan" else if [Month] = 2 then "Feb" else if [Month] = 3 then "Mar" else if [Month] = 4 then "Apr" else if [Month] = 5 then "May" else if [Month] = 6 then "Jun" else if [Month] = 7 then "Jul" else if [Month] = 8 then "Aug" else if [Month] = 9 then "Sep" else if [Month] = 10 then "Oct" else if [Month] = 11 then "Nov" else if [Month] = 12 then "Dec" else null),
				    #"Added - Month and year" = Table.AddColumn(#"Added - Month name short", "Month and year", each Text.Combine({[Month name short], " ", Text.From([Year])})),
				    #"Added - Quarter name" = Table.AddColumn(#"Added - Month and year", "Quarter name", each Text.Combine({"Quarter ", Text.From([Quarter])})),
				    #"Added - Qaurter name short" = Table.AddColumn(#"Added - Quarter name", "Quarter name short", each Text.Combine({"Q", Text.From([Quarter])})),
				    #"Added - Quarter and year" = Table.AddColumn(#"Added - Qaurter name short", "Quarter and year", each Text.Combine({[Quarter name short], " ", Text.From([Year])})),
				    #"Added - Year offset" = Table.AddColumn(#"Added - Quarter and year", "Year offset", each [Year] - Date.Year(Date.From(DateTime.LocalNow()))),
				    #"Added - Quarter offset" = Table.AddColumn(#"Added - Year offset", "Quarter offset", each (([Year]-Date.Year(Today))*4)
				+([Quarter]-Date.QuarterOfYear(Today))),
				    #"Added - Month offset" = Table.AddColumn(#"Added - Quarter offset", "Month offset", each (([Year]-Date.Year(Today))*12)
				+([Month]-Date.Month(Today))),
				    #"Added - Week offset" = Table.AddColumn(#"Added - Month offset", "Week offset", each (Date.StartOfWeek([Date])-Date.StartOfWeek(DateTime.Date(DateTime.LocalNow())))/7),
				    #"Added - Date period" = Table.AddColumn(#"Added - Week offset", "Date period", each if [Day offset] < #duration(0, 0, 0, 0) then "Past" else if [Day offset] = #duration(0, 0, 0, 0) then "Present" else if [Day offset] > #duration(0, 0, 0, 0) then "Future" else null),
				    #"Added - Is a weekday" = Table.AddColumn(#"Added - Date period", "Is a weekday", each if [Day name] = "Saturday" then "No" else if [Day name] = "Sunday" then "No" else "Yes"),
				    #"Added - Is a weekend" = Table.AddColumn(#"Added - Is a weekday", "Is a weekend", each if [Is a weekday] = "No" then "Yes" else "No"),
				    #"Added - Date SK" = Table.AddColumn(#"Added - Is a weekend", "Date SK", each Text.Combine({Text.From([year month sorting], "en-GB"), Date.ToText([Date], "dd")}), type text),
				    #"Removed unnecessary or duplicate columns" = Table.RemoveColumns(#"Added - Date SK",{"Day of Week"}),
				    #"Changing datetypes" = Table.TransformColumnTypes(#"Removed unnecessary or duplicate columns",{{"Day offset", Int64.Type}, {"Day of week", Int64.Type}, {"Day name", type text}, {"Day name short", type text}, {"Day of quarter", Int64.Type}, {"Year quarter sorting", Int64.Type}, {"year month sorting", Int64.Type}, {"Year week sorting", Int64.Type}, {"Week name", type text}, {"Week and year", type text}, {"Month name short", type text}, {"Month and year", type text}, {"Quarter name", type text}, {"Quarter name short", type text}, {"Quarter and year", type text}, {"Year offset", Int64.Type}, {"Quarter offset", Int64.Type}, {"Month offset", Int64.Type}, {"Week offset", Int64.Type}, {"Date period", type text}, {"Is a weekday", type text}, {"Is a weekend", type text}, {"Date", type date}, {"Start of Year", type date}, {"End of Year", type date}, {"Date SK", Int64.Type}}),
				    #"Reordered Columns" = Table.ReorderColumns(#"Changing datetypes",{"Date SK", "Date", "Day name", "Day name short", "Week name", "Week and year", "Month Name", "Month name short", "Month and year", "Quarter name", "Quarter name short", "Quarter and year", "Date period", "Is a weekday", "Is a weekend", "Year", "Days in Month", "Start of Week", "End of Week", "Start of Month", "End of Month", "Start of Quarter", "End of Quarter", "Start of Year", "End of Year", "Day of week", "Day of month", "Day of quarter", "Day of Year", "Week of Year", "Week of Month", "Month", "Quarter", "Day offset", "Week offset", "Month offset", "Quarter offset", "Year offset", "Year week sorting", "year month sorting", "Year quarter sorting"}),
				    #"Renaming columns" = Table.RenameColumns(#"Reordered Columns",{{"Start of Year", "Start of year"}, {"End of Year", "End of year"}, {"Start of Month", "Start of month"}, {"End of Month", "End of month"}, {"Days in Month", "Days in month"}, {"Month Name", "Month name"}, {"Start of Quarter", "Start of quarter"}, {"End of Quarter", "End of quarter"}, {"Week of Year", "Week of year"}, {"Week of Month", "Week of month"}, {"Start of Week", "Start of week"}, {"End of Week", "End of week"}, {"year month sorting", "Year month sorting"}, {"Day of Year", "Day of year"}, {"Month", "Month of year"}, {"Quarter", "Quarter of year"}})
				in
				    #"Renaming columns"

		annotation BestPracticeAnalyzer_IgnoreRules = {"RuleIDs":["MINIMIZE_POWER_QUERY_TRANSFORMATIONS"]}

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

